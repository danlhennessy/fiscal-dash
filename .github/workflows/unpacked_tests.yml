# This workflow will pull dependencies from cache, check for new requirements/requirements and push back into cache. Then run a safety check

name: 1. Unpacked Tests

on:
  push:
    branches: [ "master" ]

jobs:
  unpackaged_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Python and access pip cache
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: 'requirements/test.txt'
    
    - name: Install dependencies
      run: pip install -r requirements/test.txt
    
    - name: Run safety on current dependencies
      run: safety check --file requirements/test.txt --full-report

    - name: Run Bandit SAST
      run: bandit -r ./src --exit-zero

    - name: Run DevSkim Analysis
      uses: microsoft/devskim-action@v1
      with:
        directory-to-scan: src
        should-scan-archives: false
        ignore-globs: "**/.git/**,*.txt"

    - name: Archive DevSkim Results as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: devskim-results
        path: devskim-results.sarif
      
    - name: Lint with Flake8
      run: flake8 || exit 0
      continue-on-error: true

    - name: Lint with Pylint
      run: pylint **/*.py || exit 0
      continue-on-error: true

    - name: Lint with Ruff
      run: ruff **/*.py || exit 0
      continue-on-error: true
        
    # Test locally for now
    # - name: Run pytest with unpacked tests
    #   run: pytest -sv tests/unpacked/